// <auto-generated />
using System;
using BuddyMatch.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuddyMatch.Api.Migrations
{
    [DbContext(typeof(BuddyMatchContext))]
    [Migration("20250923204938_AddBuddyAvailability")]
    partial class AddBuddyAvailability
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuddyMatch.Api.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EarnedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Multiplier")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("PointsAwarded")
                        .HasColumnType("int");

                    b.Property<Guid?>("RelatedMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameProfileId");

                    b.HasIndex("RelatedMatchId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EarnedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameProfileId");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyGameProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuddyProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthlyPoints")
                        .HasColumnType("int");

                    b.Property<int>("StreakDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuddyProfileId")
                        .IsUnique();

                    b.ToTable("BuddyGameProfiles");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BuddyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuddyProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CompatibilityScore")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByHRId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NewcomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("RejectedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuddyId");

                    b.HasIndex("BuddyProfileId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedByHRId");

                    b.HasIndex("NewcomerId");

                    b.HasIndex("Status");

                    b.ToTable("BuddyMatches");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MaxActiveBuddies")
                        .HasColumnType("int");

                    b.Property<string>("Specialties")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("BuddyProfiles");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TechStack")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Location", "Unit", "Team");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.MatchFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("CommunicationRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CultureIntegrationRating")
                        .HasColumnType("int");

                    b.Property<int>("HelpfulnessRating")
                        .HasColumnType("int");

                    b.Property<string>("Improvements")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<Guid>("ProvidedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("WouldRecommend")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("ProvidedById");

                    b.ToTable("MatchFeedbacks");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("MatchId", "SentAt");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Achievement", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.BuddyGameProfile", "GameProfile")
                        .WithMany("Achievements")
                        .HasForeignKey("GameProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.BuddyMatch", "RelatedMatch")
                        .WithMany()
                        .HasForeignKey("RelatedMatchId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("GameProfile");

                    b.Navigation("RelatedMatch");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Badge", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.BuddyGameProfile", "GameProfile")
                        .WithMany("Badges")
                        .HasForeignKey("GameProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameProfile");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyGameProfile", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.BuddyProfile", "BuddyProfile")
                        .WithOne("GameProfile")
                        .HasForeignKey("BuddyMatch.Api.Models.BuddyGameProfile", "BuddyProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuddyProfile");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyMatch", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.Employee", "Buddy")
                        .WithMany("BuddyMatches")
                        .HasForeignKey("BuddyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.BuddyProfile", null)
                        .WithMany("BuddyMatches")
                        .HasForeignKey("BuddyProfileId");

                    b.HasOne("BuddyMatch.Api.Models.Employee", "CreatedByHR")
                        .WithMany()
                        .HasForeignKey("CreatedByHRId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.Employee", "Newcomer")
                        .WithMany("NewcomerMatches")
                        .HasForeignKey("NewcomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buddy");

                    b.Navigation("CreatedByHR");

                    b.Navigation("Newcomer");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyProfile", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.Employee", "Employee")
                        .WithOne("BuddyProfile")
                        .HasForeignKey("BuddyMatch.Api.Models.BuddyProfile", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.MatchFeedback", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.BuddyMatch", "Match")
                        .WithMany("Feedback")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.Employee", "ProvidedBy")
                        .WithMany()
                        .HasForeignKey("ProvidedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("ProvidedBy");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Message", b =>
                {
                    b.HasOne("BuddyMatch.Api.Models.BuddyMatch", "Match")
                        .WithMany("Messages")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.Employee", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuddyMatch.Api.Models.Employee", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyGameProfile", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Badges");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyMatch", b =>
                {
                    b.Navigation("Feedback");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.BuddyProfile", b =>
                {
                    b.Navigation("BuddyMatches");

                    b.Navigation("GameProfile");
                });

            modelBuilder.Entity("BuddyMatch.Api.Models.Employee", b =>
                {
                    b.Navigation("BuddyMatches");

                    b.Navigation("BuddyProfile");

                    b.Navigation("NewcomerMatches");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
